name: Deploy Web (compose build + up)

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'Dockerfile'
      - 'nginx.conf'
      - 'docker-compose.yml'
      - '.github/workflows/deploy-web.yml'
  workflow_dispatch:
    inputs:
      force_build:
        description: '강제로 docker compose build 실행'
        required: false
        default: 'false'
      force_pull:
        description: '베이스 이미지 최신화(--pull)'
        required: false
        default: 'false'
  schedule:
    - cron: '0 3 * * 1' # 매주 월요일 03:00 UTC

concurrency:
  group: deploy-web
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      DEPLOY_SSH_PORT: ${{ secrets.DEPLOY_SSH_PORT }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check required secrets
        run: |
          set -euo pipefail
          missing=0
          for var in DEPLOY_HOST DEPLOY_USER DEPLOY_SSH_KEY; do
            if [ -z "${!var:-}" ]; then
              echo "::error title=Missing secret::${var} is not set in repository Actions secrets";
              missing=$((missing+1))
            fi
          done
          if [ -z "${DEPLOY_SSH_PORT:-}" ]; then
            echo "info: DEPLOY_SSH_PORT not set, defaulting to 22";
          fi
          if [ $missing -gt 0 ]; then
            echo "Some required secrets are missing. Add them in Settings → Secrets and variables → Actions.";
            exit 1;
          fi

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.DEPLOY_SSH_KEY }}

      - name: Add host key
        run: |
          mkdir -p ~/.ssh
          : "${DEPLOY_SSH_PORT:=22}"
          ssh-keyscan -p "$DEPLOY_SSH_PORT" -H "$DEPLOY_HOST" >> ~/.ssh/known_hosts

      - name: Deploy web via SSH
        run: |
          : "${DEPLOY_SSH_PORT:=22}"
          REPO_URL="${{ github.server_url }}/${{ github.repository }}.git"
          ssh -p "$DEPLOY_SSH_PORT" "$DEPLOY_USER@$DEPLOY_HOST" \
            "bash -se -c 'set -euo pipefail; \
            mkdir -p /srv/traum_homepage; \
            cd /srv/traum_homepage; \
            if [ -d .git ]; then \
              echo Updating existing repo...; \
              git remote set-url origin \"$REPO_URL\"; \
              PREV=\"\$(git rev-parse HEAD || echo)\"; \
              if ! git fetch --prune origin main; then \
                echo Fetch without token failed, retry with token header...; \
                git -c http.extraHeader=\"Authorization: Bearer $GITHUB_TOKEN\" fetch --prune origin main; \
              fi; \
              git reset --hard origin/main; \
              NEW=\"\$(git rev-parse HEAD)\"; \
            else echo Cloning repository\ \(first\ deploy\)…; git clone --depth=1 \"$REPO_URL\" .; PREV=; NEW=\"\$(git rev-parse HEAD)\"; fi; \
            CHANGED=\"\$(git diff --name-only \"$PREV\" \"$NEW\" -- src Dockerfile nginx.conf docker-compose.yml 2>/dev/null || true)\"; \
            FORCE=\"${{ github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && inputs.force_build == 'true') }}\"; \
            FORCE_PULL=\"${{ github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && inputs.force_pull == 'true') }}\"; \
            echo PREV=\"$PREV\" NEW=\"$NEW\"; echo CHANGED=\"$CHANGED\"; echo FORCE_BUILD=\"$FORCE\" FORCE_PULL=\"$FORCE_PULL\"; \
            if [ -z \"$PREV\" ] || [ -n \"$CHANGED\" ] || [ \"$FORCE\" = \"true\" ]; then \
              echo Running docker build...; \
              export DOCKER_BUILDKIT=1; \
              if command -v docker >/dev/null 2>&1 && docker compose version >/dev/null 2>&1; then \
                if [ \"$FORCE_PULL\" = \"1\" ]; then docker compose build --pull web; else docker compose build web; fi; \
              elif command -v docker-compose >/dev/null 2>&1; then \
                if [ \"$FORCE_PULL\" = \"1\" ]; then docker-compose build --pull web; else docker-compose build web; fi; \
              else echo docker\\ compose\\ not\\ found >&2; exit 1; fi; \
            else \
              echo No relevant changes detected; skipping docker build; \
            fi; \
            if command -v docker >/dev/null 2>&1 && docker compose version >/dev/null 2>&1; then docker compose up -d web; \
            elif command -v docker-compose >/dev/null 2>&1; then docker-compose up -d web; \
            else echo docker\\ compose\\ not\\ found >&2; exit 1; fi; \
            sleep 2; \
            curl -sI http://127.0.0.1:17176 | sed -n \"1,5p\" || true; \
            docker ps --format \"table {{.Names}}\t{{.Image}}\t{{.Status}}\" | sed -n \"1,20p\"'"

      # Slack 알림 스텝 제거됨 (미사용)
